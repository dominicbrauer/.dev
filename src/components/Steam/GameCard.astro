---
import { getImage, Image } from 'astro:assets';
import { SteamWebAPI, type SteamWebAPIPlayerOwnedGame } from '@/lib/steam/SteamWebAPI';
import { db } from 'astro:db';
import { SteamWebAPIGameCompleted } from 'astro:db';
import { eq } from 'astro:db';
import PortraitPlaceholder from "@/assets/images/portrait-placeholder.png";
import { AwardIcon } from "@lucide/astro/icons";

type Props = {
	game: SteamWebAPIPlayerOwnedGame
}

const { game } = Astro.props;

const steamAPI = new SteamWebAPI();
const isComplete = (await db.select().from(SteamWebAPIGameCompleted).where(eq(SteamWebAPIGameCompleted.appid, game.appid)))[0].complete;

const portraitPlaceholder = await getImage({src: PortraitPlaceholder, format: "webp"});
---

<a class="game-card" href=`/steam/${game.appid}`>
	<div class="game-wrapper">
		<Image
			class="skeleton-animation"
			src={steamAPI.getGameImage(game.appid, "portrait")}
			alt=`Game portrait header for ${game.name}.`
			width="600"
			height="900"
			onerror=`this.src="${portraitPlaceholder.src}";`
		/>
		<div class="title-card">
			<h2 class:list={[isComplete && "golden"]}>{game.name}</h2>
		</div>
	</div>
	{ isComplete && (
		<div class="badge">
			<AwardIcon />
		</div>
	)}
</a>

<style>
	.game-card {
		display: flex;
		position: relative;
		max-width: 256px;
	}

	.game-wrapper {
		position: relative;
		display: flex;
		overflow: hidden;
		box-shadow: 
			0px -4px 16px -4px rgba(255, 255, 255, .1),
			inset 0 0 8px 4px rgba(0, 0, 0, .5);
	}

	img {
		max-width: 100%;
		height: auto;
		transition: 250ms all ease;
		z-index: -1;
	}

	.title-card {
		position: absolute;
		bottom: 0;
		width: 100%;
		height: fit-content;
		transform: translateY(100%);
		background: linear-gradient(0deg, oklch(15% 1% 240 / .5), oklch(21% 1% 240 / .5));
		border-top: 1px solid var(--border-muted);
		-webkit-backdrop-filter: blur(10px);
		backdrop-filter: blur(10px);
		padding: var(--size-s) var(--size-m);
		transition: 250ms all ease;
		z-index: 3;
	}

	h2 {
		color: var(--text);
		font-weight: 300;
	}

	h2.golden {
		color: var(--warning);
	}

	.game-card:hover img {
		filter: blur(2px);
	}

	.game-card:hover .title-card {
		transform: translateY(0);
	}

	.badge {
		display: flex;
		position: absolute;
		top: 0;
		right: var(--size-s);
		background-color: var(--bg-light);
		border-bottom-left-radius: 100%;
		border-bottom-right-radius: 100%;
		padding: var(--size-xs);
		box-shadow: 0px 2px 4px 2px rgba(0, 0, 0, 0.5);
	}

	.badge svg {
		stroke: var(--warning);
		margin-bottom: 2px; /* spacing correction */
	}
</style>
